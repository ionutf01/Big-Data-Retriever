@page "/Models"
@model Birt.App.Pages.Models

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Our Models</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
</head>
<body>
<div>
    <h1>Our Models</h1>
    <p>Our models are built using Wikidata’s SPARQL endpoint. This service allows you to query, compare, visualize, and share large sets of data and knowledge. The platform also provides recommendations for related information in different languages. Through the use of big data techniques, we offer insights and summaries on topics such as the influences of fine arts, dance, and music in specific regions over recent years.</p>
    <h2>Possible Queries</h2>
    <select id="queryDropdown" class="form-control" >
        <option value="null">--- Select a Query ---</option>
        <option value="gogh">Get works of art for Vincent van Gogh</option>
        <option value="vinci">Get works of art for Leonardo da Vinci</option>
        <option value="similar-gogh">Get similar artists to Vincent van Gogh</option>
        <option value="similar-vinci">Get similar artists to Leonardo da Vinci</option>
        <option value="influencedByGogh">Get artists influenced by Vincent van Gogh</option>
        <option value="paintingInfluencesbetween1850and1900">Get artists influences between 1850 and 1900</option>
        <option value="paintingsInfluencedByGogh">Get paintings influenced by Van Gogh</option>
    </select>
    @* <button id="allworksofart" class="btn btn-primary">Get Results</button> *@
    <div id="loading" style="display: none;">
        <div class="spinner"></div>
        Loading data...
    </div>

    <button id="showVisualization" class="btn btn-primary" style="display: none;">Show Visualization</button>
    <button id="closeVisualization" class="btn btn-secondary" style="display: none;" onclick="closeVisualization()">Close Visualization</button>
    <svg id="visualization" width="960" height="600" style="display: none;"></svg>
    
    <div id="myModal" class="modal">
        <span class="close">&times;</span>
        <img class="modal-content" id="img01">
        <div id="caption"></div>
    </div>
    
    <button id="exportCsv" class="export-button" style="display: none;">Export CSV</button>
    <button id="exportHtml" class="export-button" style="display: none;">Export HTML</button>

    <div id="criteria-form" style="display: none; margin-top: 10px;">
        <h2>Select Criteria</h2>
        <form>
            <div class="criteria-group">
                <label for="movement">Artistic Movement:</label>
                <select id="movement" class="form-control">
                    <option value="">-- Select Movement --</option>
                    <option value="Q166713">Post-Impressionism</option>
                    <option value="Q5592">Impressionism</option>
                    <option value="Q23489">Cubism</option>
                    <option value="Q4692">Renaissance</option>
                    <option value="Q1474884">High Renaissance</option>
                </select>
                <div class="checkbox-container">
                    <input type="checkbox" id="not_movement">
                    <label for="not_movement" style="margin-left: 5px; min-width: 20px">NOT</label>
                </div>
            </div>

            <div class="criteria-group">
                <label for="occupation">Occupation:</label>
                <select id="occupation" class="form-control">
                    <option value="">-- Select Occupation --</option>
                    <option value="Q1028181">Painter</option>
                    <option value="Q1281618">Sculptor</option>
                    <option value="Q33231">Photographer</option>
                </select>
                <div class="checkbox-container">
                    <input type="checkbox" id="not_occupation">
                    <label for="not_movement" style="margin-left: 5px; min-width: 20px">NOT</label>
                </div>
                
            </div>

            <div class="criteria-group">
                <label for="country">Country:</label>
                <select id="country" class="form-control">
                    <option value="">-- Select Country --</option>
                    <option value="Q30">United States</option>
                    <option value="Q142">France</option>
                    <option value="Q183">Germany</option>
                </select>
            </div>

            <button id="handlequery" type="button" class="btn btn-primary">Search</button>
        </form>
    </div>

    <div id="language-selection" style="display: none; margin-top: 20px;">
        <h2>Select Language</h2>
        <select id="languageDropdown">
            <option value="">-- Select Language --</option>
            <option value="en">English</option>
            <option value="fr">French</option>
            <option value="de">German</option>
            <option value="es">Spanish</option>
            <option value="it">Italian</option>
            <option value="ru">Russian</option>
            <option value="zh">Chinese</option>
            <option value="ja">Japanese</option>
        </select>
    </div>

    <button id="toggleView" onclick="toggleView()" style="display: none;" class="btn btn-primary">See Cards</button>





    <h2>Results</h2>
    <ul id="results"></ul>
    <div id="comparison"></div>
    <script type="module">
        import { toggleCriteriaForm, getWorksOfArt, handleQuery, visualizeRDFDataImproved, closeVisualization, exportTableToCSV, exportTableToHTML } from '/js/main.js';

        document.addEventListener('DOMContentLoaded', () => {
            const dropdown = document.getElementById("queryDropdown");

            function executeQuery(query) {
                console.log("Fetching results for:", query);
                getWorksOfArt(); // Aici înlocuiește cu logica necesară pentru a trimite cererea
            }

            function fetchResults() {
                const selectedValue = dropdown.value;

                if (selectedValue !== "similar-gogh" && selectedValue !== "similar-vinci" && selectedValue !== "null") {
                    executeQuery(selectedValue); // Rulează automat doar pentru opțiunile permise
                }
            }

            // Ascultător pentru dropdown
            dropdown.addEventListener("change", () => {
                toggleCriteriaForm(); // Păstrează această funcție dacă e necesară
                fetchResults();
            });

            // Ascultător pentru butonul de căutare manuală
            document.getElementById("handlequery").addEventListener("click", handleQuery);

            // Vizualizare RDF
            document.getElementById('showVisualization').addEventListener('click', () => {
                document.getElementById('visualization').style.display = 'block';
                document.getElementById('closeVisualization').style.display = 'block';
                visualizeRDFDataImproved();
            });

            document.getElementById('closeVisualization').addEventListener('click', () => {
                closeVisualization();
            });

            document.getElementById("exportCsv").addEventListener("click", () => {
                if (confirm("Do you want to download the results as CSV?")) {
                    const filename = dropdown.options[dropdown.selectedIndex].text.replace(/\s+/g, '_').toLowerCase() + ".csv";
                    exportTableToCSV(filename);
                }
            });

            document.getElementById("exportHtml").addEventListener("click", () => {
                if (confirm("Do you want to download the results as HTML?")) {
                    const filename = dropdown.options[dropdown.selectedIndex].text.replace(/\s+/g, '_').toLowerCase() + ".html";
                    exportTableToHTML(filename);
                }
            });

            // Execută automat dacă este selectată o opțiune validă
            fetchResults();
            // Referințe la elementele necesare
            const dropdown = document.getElementById("queryDropdown");
            const toggleButton = document.getElementById("toggleView");

            toggleButton.style.display = "none"; // Ascunde butonul inițial

            dropdown.addEventListener("change", function () {
                console.log("Dropdown changed:", dropdown.value); // Debugging

                if (dropdown.value === "gogh" || dropdown.value === "vinci") {
                    console.log("Showing button"); // Debugging
                    toggleButton.style.display = "block"; // Afișează butonul
                } else {
                    console.log("Hiding button"); // Debugging
                    toggleButton.style.display = "none"; // Ascunde butonul
                }
            });

            toggleButton.addEventListener("click", toggleView);
        });

    </script>
</div>
</body>
</html>

